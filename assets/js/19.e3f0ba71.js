(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{375:function(a,s,t){"use strict";t.r(s);var e=t(25),n=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"docker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[a._v("#")]),a._v(" Docker")]),a._v(" "),t("h2",{attrs:{id:"linux安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#linux安装"}},[a._v("#")]),a._v(" Linux安装")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 1、yum 包更新到最新 ")]),a._v("\nyum update\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 2、安装需要的软件包， yum-util 提供yum-config-manager功能，另外两个是devicemapper驱动依赖的 ")]),a._v("\nyum "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" -y yum-utils device-mapper-persistent-data lvm2\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 3、 设置yum源")]),a._v("\nyum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 4、 解决centos 8的安装docker失败情况  ")]),a._v("\nyum "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" https://download.docker.com/linux/fedora/30/x86_64/stable/Packages/containerd.io-1.2.6-3.3.fc30.x86_64.rpm\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 5、 安装docker，出现输入的界面都按 y ")]),a._v("\nyum "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" -y docker-ce\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 6、 查看docker版本，验证是否验证成功")]),a._v("\ndocker -v\n\n\n")])])]),t("h2",{attrs:{id:"windows安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#windows安装"}},[a._v("#")]),a._v(" Windows安装")]),a._v(" "),t("h2",{attrs:{id:"docker常用命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker常用命令"}},[a._v("#")]),a._v(" Docker常用命令")]),a._v(" "),t("p",[a._v("查看镜像 默认存储地址/var/lib/docker")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker images \n")])])]),t("p",[a._v("搜索镜像")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker search "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#镜像名字")]),a._v("\n")])])]),t("p",[a._v("拉取镜像 默认最新版本")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker pull "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#镜像名称")]),a._v("\n")])])]),t("p",[a._v("删除镜像")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#镜像ID")]),a._v("\ndocker rmi "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")]),a._v("docker images -q"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")])]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#删除所有镜像")]),a._v("\n")])])]),t("h2",{attrs:{id:"容器常用命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#容器常用命令"}},[a._v("#")]),a._v(" 容器常用命令")]),a._v(" "),t("p",[a._v("查看正在运行的容器")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v("\n")])])]),t("p",[a._v("查看所有容器")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v("\n")])])]),t("p",[a._v("查看最后一次运行的容器")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v(" -l\n")])])]),t("p",[a._v("查看停止的容器")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v(" -f status-exited\n")])])]),t("p",[a._v("docker命令参数")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("-i "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#运行容器")]),a._v("\n\n-t "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#标识容器启动后，进入容器终端内")]),a._v("\n\n-name: "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#容器命名")]),a._v("\n\n-v "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#标识目录映射关系")]),a._v("\n\n-d "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#启动后 创建一个守护式容器后台运行")]),a._v("\n\n-p "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#端口映射")]),a._v("\n\n--restart"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("always "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#自启动")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exit")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#退出容器")]),a._v("\n")])])]),t("p",[a._v("交互式方式启动")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker run -it --name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("容器名称 指定镜像名称:标签 /bin/bash\n")])])]),t("p",[a._v("守护进程方式启动")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker run -di --name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("容器名称 指定镜像名称:标签 /bin/bash\n")])])]),t("p",[a._v("进入守护进程容器内")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" -it 容器名称\n")])])]),t("p",[a._v("停止容器")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker stop 容器名称/ID\n")])])]),t("p",[a._v("启动容器")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker start 容器名称/ID\n")])])]),t("p",[a._v("复制文件进容器内")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" 文件地址  容器名称:容器内地址\n")])])]),t("p",[a._v("复制容器内的文件到宿主机")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" 容器名称:容器内文件地址 文件地址\n")])])]),t("h2",{attrs:{id:"私有仓库搭建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#私有仓库搭建"}},[a._v("#")]),a._v(" 私有仓库搭建")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 1、拉取私有仓库镜像 ")]),a._v("\ndocker pull registry\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 2、启动私有仓库容器 ")]),a._v("\ndocker run -id --name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("registry -p "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("5000")]),a._v(":5000 registry\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v('# 3、打开浏览器 输入地址http://私有仓库服务器ip:5000/v2/_catalog，看到{"repositories":[]} 表示私有仓库 搭建成功')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 4、修改daemon.json   ")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("vim")]),a._v(" /etc/docker/daemon.json    \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 在上述文件中添加一个key，保存退出。此步用于让 docker 信任私有仓库地址；注意将私有仓库服务器ip修改为自己私有仓库服务器真实ip ")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"insecure-registries"')]),a._v(":"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"私有仓库服务器ip:5000"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 5、重启docker 服务 ")]),a._v("\nsystemctl restart docker\ndocker start registry\n\n")])])]),t("h2",{attrs:{id:"将镜像上传至私有仓库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#将镜像上传至私有仓库"}},[a._v("#")]),a._v(" 将镜像上传至私有仓库")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 1、标记镜像为私有仓库的镜像     ")]),a._v("\ndocker tag centos:7 私有仓库服务器IP:5000/centos:7\n \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 2、上传标记的镜像     ")]),a._v("\ndocker push 私有仓库服务器IP:5000/centos:7\n\n")])])]),t("h2",{attrs:{id:"从私有仓库拉取镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#从私有仓库拉取镜像"}},[a._v("#")]),a._v(" 从私有仓库拉取镜像")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#拉取镜像 ")]),a._v("\ndocker pull 私有仓库服务器ip:5000/centos:7\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);