(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{371:function(t,a,s){"use strict";s.r(a);var r=s(25),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"classloader加载机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#classloader加载机制"}},[t._v("#")]),t._v(" CLassLoader加载机制")]),t._v(" "),s("h2",{attrs:{id:"双亲委派机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#双亲委派机制"}},[t._v("#")]),t._v(" 双亲委派机制")]),t._v(" "),s("p",[t._v("​\t当ClassLoader加载是自伤而下的一个顺序加载，即先从BootStrop Class Loader加载，其次才是扩展类加载器和系统类加载器。")]),t._v(" "),s("h2",{attrs:{id:"沙箱安全机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#沙箱安全机制"}},[t._v("#")]),t._v(" 沙箱安全机制")]),t._v(" "),s("p",[t._v("​\t正式基于双亲委派机制，采取了一种自我保护机制，加载类的时候先从BootStrop Class Loader加载器查找rt.jar包下有没有，没有才会查找下面几种加载器，从而保护了源码不受破坏")])])}),[],!1,null,null,null);a.default=e.exports}}]);